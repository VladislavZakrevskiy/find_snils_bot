import { Injectable } from '@nestjs/common';
import { Command, Ctx, On, Start, Update } from 'nestjs-telegraf';
import { HtmlParserService } from 'src/core/parser/parser.service';
import { Context, Scenes } from 'telegraf';

@Update()
@Injectable()
export class TelegramUpdate {
  constructor(private htmlParserService: HtmlParserService) {}

  @Start()
  async onStart(@Ctx() ctx: Context) {
    await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ –∫–∞–∂–¥–æ–º –ø–æ–¥–∞–Ω–Ω–æ–º –í–£–ó–µ? –ö—Ä—É—Ç–æ? –ö—Ä—É—Ç–æ!
–í–≤–æ–¥–∏ /snils –∏ –∫–∞–π—Ñ—É–π –¥–∏–∫–æ`,
    );
  }

  @Command('snils')
  async onGetCnils(@Ctx() ctx: Scenes.SceneContext) {
    await ctx.reply('–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –°–ù–ò–õ–° –≤ —Ñ–æ—Ä–º–∞—Ç–µ: XXXXXXXXXXX');
  }

  @On('text')
  async onSNILS(@Ctx() ctx: Scenes.SceneContext) {
    const SNILS = ctx.text;

    if (SNILS.length === 8 && Number.isInteger(Number(SNILS))) {
      return await ctx.reply(
        `–≠—Ç–æ –ª–∏–±–æ –°–ù–ò–õ–° –Ω–µ —Ç–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞, –ª–∏–±–æ –≤–æ–æ–±—â–µ –Ω–µ –°–ù–ò–õ–°!!!`,
      );
    }

    const { message_id } = await ctx.reply('–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–æ–≤ üïò');
    const html = await this.htmlParserService.fetchHtml(
      'https://list.mai.freenet.ru/knipm.html',
      SNILS,
    );

    const abiturient = this.htmlParserService.parseSuperList(html, SNILS);

    const editMessage = async (text: string) => {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        message_id,
        undefined,
        text,
      );
    };

    if (!abiturient) {
      await editMessage(`–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –≤–∞—Å –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö(
–ü–æ–ø—Ä–æ—É–π—Ç–µ —Å–∞–º–∏ –ø–∂`);
    } else {
      await editMessage(`–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:
–ù–æ–º–µ—Ä: ${abiturient.number}
–ú–µ—Å—Ç–æ –µ—Å–ª–∏ –ø–æ–¥–∞–¥–∏—Ç–µ –∏ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–∞—Å—Ç: ${abiturient.placeWithoutOrigs} ${Number(abiturient.placeWithoutOrigs) <= 15 ? 'üìà' : ''}
–ú–µ—Å—Ç–æ –µ—Å–ª–∏ –ø–æ–¥–∞–¥–∏—Ç–µ –∏ –≤—Å–µ –ø–æ–¥–∞–¥—É—Ç: ${abiturient.placeWithOrigs}
–í–∞—à –°–ù–ò–õ–°: ${abiturient.SNILS}
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${abiturient.prioritet}
–ê—Ç—Ç–µ—Å—Ç–∞—Ç: ${abiturient.orig} ${abiturient.orig === '–û—Ä–∏–≥–∏–Ω–∞–ª' ? '‚úÖ' : '‚ùå'}
–ë–∞–ª–ª—ã —Å –ò–î: ${abiturient.EGE}
–ò–î: ${abiturient.ID}
–û–±—â–µ–∂–∏—Ç–∏–µ: ${abiturient.objaga}
–í—Å–µ –í–£–ó–´: ${abiturient.VUZs.map((VUZ) => `\n${VUZ} ${VUZ.includes('–ú–ê–ò') ? 'üìà' : VUZ.includes('–ú–ò–†–≠–ê') ? 'üìâ' : ''}`)}`);
    }
  }
}
